apiVersion: apps/v1
kind: Deployment
metadata:
  name: centralledger
  labels:
    app: centralledger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: centralledger
  template:
    metadata:
      labels:
        app: centralledger
    spec:
      containers:
      - name: central-ledger
        image: mojaloop/central-ledger:v10.1.1
        # command: [ "sh", "-c", "tail -f /dev/null" ]
        env:
          - name: CLEDG_DATABASE__HOST
            value: mysql
          # - name: CLEDG_DATABASE__USER
            # value: central_ledger

        # securityContext:
          # runAsUser: 0
---
# MySQL 
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data2"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    # TODO: is this right?
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_USER
          value: central_ledger
        - name: MYSQL_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: central_ledger
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim