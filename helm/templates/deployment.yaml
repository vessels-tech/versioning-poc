{{- $dbHost := ( .Values.config.db_host | replace "$release_name" .Release.Name ) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "centralledger-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "centralledger-service.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "centralledger-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "centralledger-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      {{- if .Values.metrics.enabled }}
      annotations:
        prometheus.io/port: "{{ .Values.containers.api.service.ports.api.internalPort }}"
        prometheus.io/scrape: "true"
      {{- end }}
    spec:
      {{- if .Values.init.enabled }}
      initContainers:
        {{- if eq .Values.config.db_type "mysql"}}
        - name: {{ .Values.init.mysql.name }}
          image: {{ .Values.init.mysql.repository }}:{{ .Values.init.mysql.tag }}
          imagePullPolicy: {{ .Values.init.mysql.pullPolicy }}
          command:
            - sh
            - "-c"
            - {{ (.Values.init.mysql.command | replace "$db_user" (print .Values.config.db_user) | replace "$db_password" (print .Values.config.db_password) | replace "$db_host" $dbHost | replace "$db_database" (print .Values.config.db_database) | replace "$db_port" (print .Values.config.db_port) )| quote }}
        {{- end }}
        {{- if .Values.init.migration.enabled }}
        - name: {{ .Values.init.migration.name }}
          image: {{ .Values.containers.api.image.repository }}:{{ .Values.containers.api.image.tag }}
          imagePullPolicy: {{ .Values.containers.api.image.pullPolicy }}
          command:
            - sh
            - "-c"
            - {{ .Values.init.migration.command }}
          env:
            - name: "CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS"
              value: {{ .Values.init.migration.config.run_data_migration | quote }}
          volumeMounts:
            - name: {{ template "centralledger-service.fullname" . }}-config-volume
              mountPath: /opt/central-ledger/config
        {{- end }}
      {{- end }}
      containers:
        - name: {{ template "centralledger-service.name" . }}
          image: {{ .Values.containers.api.image.repository }}:{{ .Values.containers.api.image.tag }}
          imagePullPolicy: {{ .Values.containers.api.image.pullPolicy }}
          command: {{ .Values.containers.api.image.command }}
          ports:
          {{- range $port := .Values.containers.api.service.ports }}
            - name: {{ $port.name }}
              containerPort: {{ $port.internalPort }}
          {{- end }}
          {{- if .Values.containers.api.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.api.readinessProbe.httpGet.path }}
              port: {{ .Values.containers.api.service.ports.api.internalPort }}
            initialDelaySeconds: {{ .Values.containers.api.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.api.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.containers.api.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.containers.api.livenessProbe.httpGet.path }}
              port: {{ .Values.containers.api.service.ports.api.internalPort }}
            initialDelaySeconds: {{ .Values.containers.api.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.api.livenessProbe.periodSeconds }}
          {{- end }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.config.log_level | quote}}
            - name: LOG_FILTER
              value: {{ .Values.config.log_filter | quote}}
            - name: CSL_LOG_TRANSPORT
              value: {{ .Values.config.log_transport | quote}}
            - name: EVENT_SDK_LOG_FILTER
              value: {{ .Values.config.event_log_filter | quote }}
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: {{ .Values.config.event_log_metadata_only | quote }}
            - name: EVENT_SDK_VENDOR_PREFIX
              value: {{ .Values.config.event_trace_vendor | quote }}
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: {{ .Values.config.event_trace_state_enabled | quote }}
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: {{ .Values.config.event_async_override | quote }}
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: {{ .Values.config.event_traceid_per_vendor | quote }}
          volumeMounts:
          - name: {{ template "centralledger-service.fullname" . }}-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: {{ template "centralledger-service.fullname" . }}-config-volume
          configMap:
            name: {{ template "centralledger-service.fullname" . }}-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
