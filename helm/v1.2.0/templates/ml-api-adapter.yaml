apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlapiadapter
  labels:
    app: mlapiadapter
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 # exeed the replicas by 1 pod
  selector:
    matchLabels:
      app: mlapiadapter
  template:
    metadata:
      labels:
        app: mlapiadapter
    spec:
      containers:
      - name: ml-api-adapter
        image: mojaloop/ml-api-adapter:v10.5.1-versioning-poc-v1.2.0
        livenessProbe:
          initialDelaySeconds: 30
          httpGet:
            path: /health
            port: 3000
        readinessProbe:
          initialDelaySeconds: 30
          httpGet:
            path: /health
            port: 3000
        env:
          - name: MLAPI_ENDPOINT_SOURCE_URL
            value: http://centralledger:3001
          - name: MLAPI_ENDPOINT_HEALTH_URL
            value: http://centralledger:3001/health
          - name: MLAPI_KAFKA__PRODUCER__TRANSFER__PREPARE__config__rdkafkaConf__metadata.broker.list
            value: kafka:9092
          - name: MLAPI_KAFKA__PRODUCER__TRANSFER__FULFIL__config__rdkafkaConf__metadata.broker.list
            value: kafka:9092
          - name: MLAPI_KAFKA__PRODUCER__TRANSFER__GET__config__rdkafkaConf__metadata.broker.list
            value: kafka:9092
          - name: MLAPI_KAFKA__CONSUMER__NOTIFICATION__EVENT__config__rdkafkaConf__metadata.broker.list
            value: kafka:9092
---
apiVersion: v1
kind: Service
metadata:
  name: mlapiadapter
spec:
  ports:
  - port: 3000
  selector:
    app: mlapiadapter
  clusterIP: None
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mlapiadapter
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - http:
        paths: 
          - path: /ml-api-adapter(/|$)(.*)
            backend:
              serviceName: mlapiadapter
              servicePort: 3000